#!/usr/bin/env python3

# The MIT License (MIT)
#
# Copyright (c) 2016 Ivan Gavrilin
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import matplotlib.dates as mdates
from sview.window import *
from sview.sources import *

import sys, getopt
from os import path, stat, environ

program_name = "PYView 1.0"

def usage():
    print("Simple mode:")
    print("./pyview PLBFILENAME")

def normalize_path(path):
    return path.replace("~", environ['HOME'], 100)

def normalize_watch(p):
    p = normalize_path(p)
    if path.isdir(p):
        return p + "/*"
    return p

try:
    opts, args = getopt.getopt(sys.argv[1:], "hwqt:", ["help", "watch", "time_window="])
except getopt.GetoptError:
    usage()
    sys.exit(1)

watch_mode = False
time_window = None

for opt, arg in opts:
    if opt in ("-h", "--help"):
        usage()
        sys.exit()
    elif opt in ("-w", "--watch"):
        watch_mode = True
    elif opt in ("-t", "--time_window"):
        time_window = int(arg)

if len(args) <= 0:
    usage()
    sys.exit(3)

if len(args) == 1:
    title = ". view " + args[0]
else:
    title = ". view mode"

w = Window(program_name + title)
for a in args:
    a = normalize_path(a)
    s = w.create_stream(FileUpdater(a), time_window)
    s.set_name(path.basename(a))

event_loop()
